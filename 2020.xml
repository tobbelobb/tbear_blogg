<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="blogtemplate.xsl"?>
<posts year="2020">
  <post id="hangprinter_project_63" heading="Introducing Line Collision Detector" date="22-7-2020">
    <p>
      I got asked again recently, about the Hangprinter print volume.
      How big is it really?
      The short answer is that there is no well defined print volume.
      The long answer is complicated.
    </p>
    <h3>The Long Answer</h3>
    <p>
      First, lets split the question into two parts:
      <ul>
        <li>Where can we reach?</li>
        <li>What can we print?</li>
      </ul>
    </p>
    <h3>The Reachable Volume</h3>
	  <figure>
	  	<a href="./bilder/ReachableVolume.png">
	  		<img src="./bilder/ReachableVolume_liten.png" alt="" width="500" height="444"/>
	  	</a>
	  	<figcaption>
	  	</figcaption>
	  </figure>
    <p>
      The Hangprinter's effector is fully constrained when moving within the tetrahedron spanned up by its four anchors.
      An evil AI driven firmware could theoretically use the motors to toss the effector out of this envelope, but let's ignore that possibility
      and call the anchor-spanned tetrahedron <i>the reachable volume</i>.
    </p>
    <p>
      I reality, we won't be able to print close to the walls of the reachable volume, since gravity will make
      the effector sag inwards.
      So <i>the usable volume</i> is a few percent smaller than the reachable volume.
      Exactly how much sag to expect could be calculated from the weight of the effector and the maximum static force of the motors,
      but let's save those calculations for another blog post.
    </p>
	  <figure>
	  	<a href="./bilder/hp_volume.png">
	  		<img src="./bilder/hp_volume_liten.png" alt="" width="500" height="293"/>
	  	</a>
	  	<figcaption>
        Fred Hedenberg made this nice and correct rendering of a usable print volume.
	  	</figcaption>
	  </figure>
    <p>
      This is where I wish we could end the analysis and say "print volume = tetrahedron minus sag".
      But alas.
      We cannot fill up the whole usable volume with tetrahedron-shaped benchy fractals.
      At least not in a single big print.
    </p>
    <h3>So, For Any Particular 3d-model: Can we print it?</h3>
    <p>
      With Hangprinter we also have to consider the risk that lines might collide with the half-finished print.
      Every tad of extruded material is a potential obstacle for every subsequent move.
    </p>
    <p>
      Consider the following render for some intuition about line collisions:
    </p>
	  <figure>
	  	<a href="./bilder/cone_shapes.jpg">
	  		<img src="./bilder/cone_shapes_liten.jpg" alt="" width="500" height="344"/>
	  	</a>
	  	<figcaption>
        The Hangprinter's effector is attached to the ground with 6 different lines.
        For each layer, each line will move within a "cone shape". The top of the cone shape is a convex hull of the current top layer.
	  	</figcaption>
	  </figure>
    <p>
      Actually, the answer to the question "is this object printable with my Hangprinter?", depends on a lot of things.
      For example:
      <ul>
        <li>The positions of your anchors,</li>
        <li>the shape of your effector,</li>
        <li>how your object is rotated,</li>
        <li>where it's placed on the build plate,</li>
        <li>where you make your travel moves,</li>
        <li>and in which order you put down the material!</li>
      </ul>
      Lots of stuff to think about.
      Way more stuff than we'd like to think about.
    </p>
    <h3>The Solution</h3>
    <p>
      Since the start of the Hangprinter Project, I've wanted simple hardware and advanced software,
      so I thought I should try to solve the line collision problem by writing a computer program.
      <a href="https://gitlab.com/hangprinter/line-collision-detector">Line-collision-detector</a>
      is the result.
      It checks whether you'll have a line collision during print.
    </p>
	  <figure>
      <video width="500" height="341" controls="controls">
        <source src="bilder/usage00.mp4" type="video/mp4"/>
         <!--source src="movie.ogg" type="video/ogg"-->
         Your browser does not support the video tag.
      </video>
	  	<figcaption>
        The most basic usage of line-collision-detector.
        A collision is detected.
        The big-benchy.stl contains a 16.4x scaled up benchy.
        The params file contains positions of anchor points and effector pivot points.
        See the <a href="https://gitlab.com/hangprinter/linc/-/blob/f1282432a53a9c59042edb43716f4256b6de8caf/linc/params-example">params-example</a>
        file in the repo for information about the params file.
	  	</figcaption>
	  </figure>
	  <figure>
      <video width="500" height="340" controls="controls">
        <source src="bilder/usage01.mp4" type="video/mp4"/>
         <!--source src="movie.ogg" type="video/ogg"-->
         Your browser does not support the video tag.
      </video>
	  	<figcaption>
        Here, a non-scaled 3DBenchy is analyzed, and since it's so small, no collision is detected.
        The <code>-l</code> option is used to tell line-collision-detector to use a layer height of max 3 mm.
        A bigger l-value lets the program terminate faster because there are fewer layers to analyze.
	  	</figcaption>
	  </figure>
	  <figure>
      <video width="500" height="283" controls="controls">
        <source src="bilder/usage02.mp4" type="video/mp4"/>
         <!--source src="movie.ogg" type="video/ogg"-->
         Your browser does not support the video tag.
      </video>
	  	<figcaption>
        I recommend viewing this in fullscreen.
        Here, the <code>-o</code> option is used to create a debug model, which is inspected with <a href="https://www.blender.org/">Blender</a>.
        We can confirm that the effector is at a sensible position, and that there really is a line collision occuring at z=393.6.
	  	</figcaption>
	  </figure>
    <p>
      For details about how to build and develop line-collision-detector, I refer to <a href="https://gitlab.com/hangprinter/line-collision-detector/-/blob/master/README.md">the readme in the line-collision-detector repo</a>
      and <a href="https://gitlab.com/hangprinter/linc/-/blob/master/README.md">the readme in the linc subrepo</a>.
      For details on how to use the program, I recommend typing <code>run --help</code> on the command line.
    </p>
    <p>
      This post is already quite long, so I realize I should save the details of the line-collision-detector
      algorithm for another blog post.
    </p>
    <p>
      Anyways, I hope you find this new tool useful! =D
      And well, we now kind of have a short answer to "how big is the build volume?":
      16x 3DBenchy.
    </p>
  </post>
</posts>
