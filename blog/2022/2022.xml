<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="blogtemplate.xsl"?>
<posts year="2022">
  <post id="hangprinter_project_79" heading="Solving Hangprinter's Biggest Problem" date="21-4-2022">
    <p>
      So you've mounted your Hangprinter hardware.
      You've threaded all the lines and attached all the anchors.
      Motors are spinning.
    </p>
    <p>
      Now there's just the configuration left and you're good to go! Weeee! =)=)=)
    </p>
    <p>
      Ehem. Not so fast. Hangprinters kinematics is non-linear. Configuration is fiendishly hard.
    </p>
    <figure>
      <a href="./bilder/Reuben-Margolin.jpg">
        <img src="./bilder/Reuben-Margolin_small.jpg" alt="" width="500" height="277"/>
      </a>
      <figcaption>
        <a style="font-size:7px;" href="http://www.aesdes.org/2019/03/09/top-5-constraints-kinetic-art/">Image source</a>
      </figcaption>
    </figure>
    <h3>Kinematics? Non-linear? What?</h3>
    <p>
      With non-linear here, we mean there's no flatness or straightness to be found in Hangprinter's physical parts.
      We use maths and physics to give it precision capabilities despite these weirdly shaped parts.
      Let me explain the problem more closely.
    </p>
    <p>
      Hangprinter's movement commands are given in terms of x-, y-, and z-coordinates.
      Gcode files and user commands will tell the Hangprinter to
      "move to the position that has this x-coordinate, this y-coordinate, and this z-coordinate".
      Xyz-coordinates, sometimes called Cartesian coordinates, are flat and straight, with straight angles between them.
    </p>
    <figure>
      <a href="./bilder/straight_movements_angled_lines.JPG">
        <img src="./bilder/straight_movements_angled_lines_small.JPG" alt="" width="500" height="474"/>
      </a>
      <figcaption>
        In a simple pattern like this, you can count the corners to know how many movement commands the Hangprinter got.
        Each movement command told the Hangprinter to move from one corner to another corner.
        Hangprinter needs to figure out for itself how to make the movement in between the corners smooth, flat, and straight.
      </figcaption>
    </figure>
    <p>
      Hangprinter's physical parts are neither flat nor straight, as we mentioned.
      Therefore, it can't control xyz-positions directly by moving three independent motors at constant speeds, like traditional gantry-style machines typically do.
    </p>
    <p>
      Instead, its controls four motors, called A, B, C, and D.
      The motors are in turn connected to the moving unit (and each other) via belts, spools and strings.
    </p>
    <p>
      None of the strings lie perfectly along the x-, y-, or z-axis.
      They point in all kinds of different directions at different times.
    </p>
    <p>
      So to execute xyz-movement commands, the Hangprinter needs to convert xyz-positions into motor-positions (ABCD-positions).
      The conversion from xyz to ABCD is expressed in Hangprinter's firmware as an equation called
      the <b>inverse kinematics equation</b>.
      Let's abbreviate it as f(xyz) -&gt; (ABCD).
    </p>
    <p>
      Take a deep breath.
    </p>
    <figure>
      <a href="./bilder/Irish_Wave_at_Park_West_in_Dublin.jpg">
        <img src="./bilder/Irish_Wave_at_Park_West_in_Dublin_small.jpg" alt="" width="500" height="667"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      Sorry I lied to you.
      If it was as easy as f(xyz) -&gt; (ABCD), then that wouldn't have been fiendishly hard at all.
      The inverse kinematics equation depends on many more values than just xyz.
      There are at least 25 other values.
      So f is better described like this:
    </p>
    <p>
      f(xyzqwertuiopasdfghjklcvbnm...) -&gt; (ABCD)
    </p>
    <p>
      Each letter in the qwert...-part corresponds to a configuration value.
      All these values describe physically measurable things,
      like the moving unit's weight, the lines' stiffness, the anchors' xyz-locations, the lines' thickness, the spools' radii (including buildup from idle unused line), and the various types of gearing in the system.
    </p>
    <p>
      The inverse kinematics function f is actually a fairly involved physics-model of your Hangprinter machine.
      If the model is configured wrong, so that it doesn't match reality, then the movements go wrong in reality.
      Typically manifestations of an f vs reality mismatch, are non-flat first layers, over-tight or slack lines, and generally horrible printing quality.
    </p>
    <h3>Ok Non-linear Bla-bla. But Still: What?</h3>
    <p>
      Yeah, we don't want to have you learn all that.
      The complexity will also continue to increase in the future, just because reality is complicated and we want to develop the inverse kinematics equation further.
    </p>
    <p>
      How are you supposed to keep up with that?
      How are we supposed to give efficient support when 50% of users come and say "Hey, all my lines go slack"?
      Actually, it's probably 75%.
    </p>
    <p>
      To be honest, configuring the qwert...-values from scratch drives everyone crazy.
      This is one reason why cable driven robots aren't very frequent out in industry already.
      Physics is too hard. We need to automate.
    </p>
    <h3>✨Solution: Verify✨</h3>
    <p>
      It's not enough to just hope configuration is good enough.
      With my fingers crossed all the time, I get less work done.
    </p>
    <p>
      The machine must measure its own configuration values, as many as possible at once, and give us some proof that they are indeed correct.
    </p>
    <p>
      This is now possible, and it works (ok, it has been possible for a while, but it works much better now).
      It builds upon collecting some simple data, mostly with the machine itself.
    </p>
    <p>
      Check out
      <a href="https://gitlab.com/tobben/auto-calibration-simulation-for-hangprinter">auto-calibration-simulation-for-hangprinter</a>, and its simulation.py program.
    </p>
    <p>
      It works like this:
      You start with your mounted, but completely unconfigured Hangprinter v4.
      Put it into torque mode and push it to your desired origin point by hand.
      You send it a command who teaches the Hangprinter that this is the xyz=0 point from now on.
    </p>
    <p>
      Next, you measure the line lengths (endpoint to endpoint along the lines) in all the four directions.
      This teaches your Hangprinter roughly how large it is, and helps you verify config values later on.
    </p>
    <p>
      Then you locate some known points on your print bed, and one known point that is higher up.
      This teaches your Hangprinter what "flatness" is and where "upward" is.
    </p>
    <p>
      Here's a video showing how I pushed my mover around, collecting data at each of the green, known positions.
    </p>
    <figure>
      <video width="500" height="367" controls="controls">
        <source src="./bilder/collect_first_eight.webm" type="video/webm"/>
         <!--source src="movie.ogg" type="video/ogg"-->
         Your browser does not support the video tag.
      </video>
      <figcaption>
        Animation showing where I collected my first nine data points.
        Shows best in fullscreen.
      </figcaption>
    </figure>
    <p>
      Since I use <a href="gitlab.com/tobben/hp-mark">hp-mark</a>, I have known positions all around, but you can create
      known positions by for example using objects of known sizes, aiming plumbs and similar tools.
    </p>
    <p>
      Lastly, you collect motor encoder data in lots (~40) of unknown xyz-positions, but with lines still straight but not super tight, thanks to torque mode.
      This teaches the Hangprinter how a valid, safe position looks like, where no slackness but also no over-tightening happens.
    </p>
    <figure>
      <video width="500" height="367" controls="controls">
        <source src="./bilder/collect_all.webm" type="video/webm"/>
         <!--source src="movie.ogg" type="video/ogg"-->
         Your browser does not support the video tag.
      </video>
      <figcaption>
        Animation showing where I collected all my data points.
        Shows best in fullscreen.
      </figcaption>
    </figure>
    <p>
      If your data was high quality, then the simulation.py program will find good configuration values for you,
      and tell you exactly how good they are:
    </p>
    <figure>
      <a href="./bilder/simulation_output.png">
        <img src="./bilder/simulation_output_small.png" alt="" width="500" height="117"/>
      </a>
      <figcaption>
        In the 44 positions show in the animation above, positional error will be maximum ~2mm,
        and the line lengths found were ~23 mm different from the hand-measured values, summed over all four directions,
        so a ca 6mm error in each direction on average.
        The configuration itself is the three lines of copy/paste-able M669 and M666-commands at the bottom.
      </figcaption>
    </figure>
    <p>
      Now, why is this a proof and a verification that the inverse kinematic function can work with these configuration values?
      Because the same inverse kinematics function that run on Hangprinter's controller board also runs inside simulation.py.
      If it works in simulation.py, together with the reality-check that collected data provides, then it works in the physical Hangprinter as well.
    </p>
    <p>
      For the time being, collecting all the data and running simulation.py is a bit cumbersome but <a href="https://gitlab.com/tobben/auto-calibration-simulation-for-hangprinter/-/blob/hp_mark_adjusted/README.md">well documented</a>.
    </p>
    <p>
      Having a program that tells the user exactly what to do while double and triple checking the data, and running simulation.py in the background, is the next big step in making Hangprinter easier to use.
      However, all the underlying maths and algorithms are established and working already.
    </p>
    <h3>Why Collect All This Data? Why Not Just Use Measurement Tape, Like In the Good Old HP3-Days?</h3>
    <p>
      Finding good configuration values based on collected data has three large advantages over hand-measuring everything and hoping for the best:
      <ul>
        <li>It can be fully automated.</li>
        <li>Less doubt. I always wonder if I made a typo or mistake with my measurement tape. The simulation.py method gives a proven and typo-free config.</li>
        <li>Easier support. The data gives a complete picture of your motion system. If I get your data, I can for example discover that your spools have the wrong radii, or that your gears miss a tooth.
          Or I can discover that you're collecting your data points in a too small volume, or with too tight lines. Such things are extremely hard to reliably clear up via chat, email or even voice chat.
          In the data, it's more or less obvious, and finding all these kinds of errors can even be automated, removing the need for support completely in the future.</li>
      </ul>
    </p>
    <p>
      In addition to this, the approach of simulating Hangprinter gives me many advantages as a developer,
      allowing me to push Hangprinter technically forwards faster than I would have otherwise.
    </p>
    <h3>I Use The Simulation To Double-Check hp-mark's Measurements</h3>
    <p>
      Actually, simulation.py gives us an opportunity to check how accurate hp-mark is, and the general direction of its errors.
    </p>
    <figure>
      <a href="./bilder/from_camera_view.png">
        <img src="./bilder/from_camera_view_small.png" alt="" width="500" height="257"/>
      </a>
      <figcaption>
        Click the image for a closer view.
        This rendering is taken from roughly the hp-mark camera's point of view.
        The cyan colored points is where hp-mark thought the nozzle was.
        The red points is where simulation.py thought the nozzle was.
        We see that cyan and red points generally line up along the camera's depth direction.
      </figcaption>
    </figure>
    <figure>
      <a href="./bilder/orth_to_camera_view.png">
        <img src="./bilder/orth_to_camera_view_small.png" alt="" width="500" height="311"/>
      </a>
      <figcaption>
        Click the image for a closer view.
        This is the same scene, but rendered from another point of view.
        The hp-mark camera would be located in the top right corner of this rendering.
        We see once again that errors are mostly along the depth-direction of the camera.
        Most often, but not always, the hp-mark position (cyan one) is closer to the camera than the simulation.py measured position (red one).
      </figcaption>
    </figure>
    <p>
      The idea that hp-mark has measurement errors that are larger along its depth direction makes sense,
      and suggests that hp-mark must add a second camera before it can create data for the simulation.py configuration automation.
    </p>
    <p>
      Configuration based on accurate positional data would be significantly faster to acquire, and also more precise than the current procedure.
      This was the motivation for developing hp-mark in the first place, but as the images above show clearly, we're not there yet.
    </p>
    <h3>I Use The Simulation To Double-Check Hangprinter's Forward Kinematics</h3>
    <p>
      I've described the function f(xyz) -&gt; (ABCD) and called it the inverse kinematics equation.
      There's also an inverse of this equation in the Hangprinter's firmware, doing the opposite of f.
      It's called the <b>forward kinematics equation</b>. Let's call it F and describe it like this:
    </p>
    <p>
      F(ABCD) -&gt; (xyz)
    </p>
    <p>
      Developing the function F is as hard as developing f, and I frequently use simulation.py to double-check that changes to F work
      before putting them into the real Hangprinter firmware.
    </p>
    <h3>I Use The Simulation To Check The Quality Of Force-Data</h3>
    <p>
      The ODrives are capable of emitting some force data.
      My investigations have shown that the data is still too crude to be useful for any purpose.
    </p>
    <p>
      However, once we get accurate force-data, the simulation.py script is prepared to take advantage of it,
      to give us even faster and more accurate configuration values.
    </p>
    <h3>Having All The Equations Coded Up In simulation.py Makes Hangprinter More General</h3>
    <p>
      The equations are really a large part of the value that the Hangprinter Project provides to the world.
      Having them coded up in Python is useful whenever one wants to make a plot or do a quick experiment.
    </p>
    <p>
      Having them coded up in Python also opens up for easily implementing good Hangprinter support
      in Klipper or other Python based firmwares in the future.
    </p>
    <p>
      That was all for today. I hope you will use and enjoy <a href="https://gitlab.com/tobben/auto-calibration-simulation-for-hangprinter">auto-calibration-simulation-for-hangprinter</a> for years to come.
    </p>
  </post>


  <post id="hangprinter_project_78" heading="Hangprinter v4 and Hangprinter v5" date="27-3-2022">
    <p>
      Hangprinter is a cable-driven robot.
      HP4 is the latest version.
    </p>
    <!--p>
      For a cable-driven robot to be reliable and enjoyable to use it must be fully automated.
      The only thing we can rely on humans to enjoy doing is mounting stationary anchors.
      The machine must measure its own positions, line tensions, and calibration values.
      It must jump to life like magic, based on software without bugs.
      Anything less is a support nightmare.
    </p-->
    <p>
      Goal for HP4 development was to create a reliable workhorse, that people enjoy using, for profit.
      That sounds a bit like magic.
      HP4, like any kind of magic, is complex and slow to develop.
      <!--It's the kind of project that boards of directors love to shut down.-->
    </p>
    <p>
      I've made a list of HP4's features, as well as some plans for the v5.
    </p>
    <h3>🎠 HP4's Unique Features 🎠</h3>
    <p>
      <ul>
        <li>Space Below Is Completely Cleared When Parked</li>
        <ul>
          <li>Takes 5 Min to Park. (<a href="https://twitter.com/tobbelobb/status/1507390473706643456">1</a>, <a href="https://twitter.com/tobbelobb/status/1507394479501811717">2</a>)</li>
        </ul>
        <li>Supports Any Placement of Motor and Electronics, enabled by</li>
        <ul>
          <li>CAN Driven Communication</li>
          <li>All Axes Are Conceptually Identical (<a href="https://github.com/Duet3D/RepRapFirmware/pull/554">1</a>)</li>
          <li>Pre-Defined Placement is Also Avaliable as DXF/PDF (<a href="https://twitter.com/tobbelobb/status/1403282393784541191">1</a>)</li>
        </ul>
        <li>Slack Tolerance and Servicability, enabled by</li>
        <ul>
          <li>Thick Stiff Wear Resistant Lines (<a href="https://youtu.be/K_fQpvZ3oeA">1</a>)</li>
          <li>Completely Closed Line Paths</li>
          <li>Ceramic Eyelets &amp; U-shaped Bearings Everywhere</li>
          <li>Little Risk of Lines Falling Off, Tangling, or Getting Stuck</li>
          <li>Parts Along Line Path Can Be Mounted/Serviced Whithout Unthreading (<a href="https://youtu.be/CsXr_lqhI90">1</a>)</li>
        </ul>
        <li>High Speeds (~900 mm/s) (<a href="https://twitter.com/tobbelobb/status/1484209682420019206">1</a>), enabled by</li>
        <ul>
          <li>High Quality BLDC Motors</li>
          <li>Lots of Processing Power</li>
        </ul>
        <li>Self-Calibration (<a href="https://youtu.be/As3Y5J2NTGA">1</a>), enabled by</li>
        <ul>
          <li>Built-in Motion Tracking (<a href="https://twitter.com/tobbelobb/status/1466773203938852870">1</a>)</li>
          <li>Built-in Force Sensing (<a href="https://github.com/Duet3D/RepRapFirmware/pull/564">1</a>)</li>
          <li>Few Hand-Measurements are Needed</li>
        </ul>
        <li>High Precision and Accuracy (<a href="https://twitter.com/tobbelobb/status/1473344630842445832">1</a>, <a href="https://twitter.com/tobbelobb/status/1472947513191768065">2</a>, <a href="https://twitter.com/tobbelobb/status/1433384365023715328">3</a>, <a href="https://twitter.com/tobbelobb/status/1430218354971848713">4</a>, <a href="https://www.youtube.com/watch?v=qdRI0cvxagU">5</a>, <a href="https://twitter.com/tobbelobb/status/1383821508238143491">6</a>, <a href="https://twitter.com/tobbelobb/status/1130065984881070080">7</a>, <a href="https://twitter.com/tobbelobb/status/1128704338162016262">8</a>), enabled by:</li>
        <ul>
          <li>Motion Tracking (<a href="https://twitter.com/tobbelobb/status/1466773203938852870">1</a>)</li>
          <li>Force Sensing (<a href="https://github.com/Duet3D/RepRapFirmware/pull/564">1</a>)</li>
          <li>Flex Compensation. (<a href="https://twitter.com/tobbelobb/status/1503840578236264455">1</a>, <a href="https://github.com/Duet3D/RepRapFirmware/pull/562">2</a>)</li>
          <li>Spool Buildup Compensation (<a href="https://twitter.com/tobbelobb/status/1084185594497064961">1</a>)</li>
          <li>Mechanical Bed Probe (<a href="https://twitter.com/tobbelobb/status/1458823899827871754">1</a>)</li>
          <li>Direct Connection Between Motors and Tip of Tool Head. (<a href="https://twitter.com/tobbelobb/status/1508519679970664459/video/1">1</a>, <a href="https://twitter.com/tobbelobb/status/1123626333958021122">2</a>)</li>
          <li>High Number &amp; Wide Apart Line Force Points Stabilizing Effector</li>
        </ul>
        <li>User Friendliness, enabled by</li>
        <ul>
          <li>Plug-and-Play Compatible With Wide Range of Tool Heads and Materials</li>
          <ul>
            <li>Plastic Filament</li>
            <li>Plastic Pellets</li>
            <li>Clay</li>
            <li>Pen-plotting (standard HP4 plotting tool available). (<a href="https://twitter.com/tobbelobb/status/1460974351931654144">1</a>)</li>
          </ul>
          <li>Web GUI via Wifi</li>
          <li>Gcode Macros, User-Defined and Pre-Defined</li>
          <li>Mesh Bed Compensation With Mechanical Probe (<a href="https://twitter.com/tobbelobb/status/1458823899827871754">1</a>)</li>
          <li>Risk of Line Collision Detected Before Print (<a href="https://twitter.com/tobbelobb/status/1282801692757696513">1</a>, <a href="https://twitter.com/tobbelobb/status/1280787224519417856">2</a>)</li>
          <li>Stock Firmwares Means Updates Come For Free</li>
          <li>Torque Mode (<a href="https://vimeo.com/227891846">1</a>)</li>
        </ul>
        <li>Safety, enabled by</li>
        <ul>
          <li>Mechanical Line Release Mechanism (<a href="https://twitter.com/tobbelobb/status/1410903567473459202">1</a>)</li>
          <li>Low Max Current Through Motors</li>
          <li>Various Fault Detection Mechanisms in Driver Software</li>
          <li>Heat-resistant hose to protect electric wires from hot parts (<a href="https://twitter.com/tobbelobb/status/1444007666255384584">1</a>)</li>
          <li>Hoist &amp; Lower the Ceiling Unit Easily. No ladders required for maintenance. (<a href="https://twitter.com/tobbelobb/status/1428025129406238723">1</a>).</li>
        </ul>
        <li>Heavy Duty Effector</li>
        <ul>
          <li>Gear Up/Down With Block &amp; Talley System. (<a href="https://twitter.com/tobbelobb/status/1428702006844305413">1</a>)</li>
          <li>Direct Connection Between Motors and Tip of Tool Head. (<a href="https://twitter.com/tobbelobb/status/1508519679970664459/video/1">1</a>, <a href="https://twitter.com/tobbelobb/status/1123626333958021122">2</a>)</li>
        </ul>
        <li>Smooth As Butter Motion System, enabled by</li>
        <ul>
          <li>Belt Transmission Between Motor And Spool</li>
          <li>Anti-Cogging. Motor Drivers Cancel Out Unevenness Inside Motors. (<a href="https://twitter.com/tobbelobb/status/1405475942286376965">1</a>)</li>
        </ul>
        <li>Scales Up To Several Cubic Meters, enabled by</li>
        <ul>
          <li>Automatic Length Control of Hanging Electrical Wires (<a href="https://twitter.com/tobbelobb/status/1451208751692894210">1</a>)</li>
          <li>Support for Extra Backing-Line</li>
          <li>Support for Changing Anchor Placements Manually During Print</li>
        </ul>
        <li>The Cheapest to Transport Big 3d Printer, enabled by</li>
        <ul>
          <li>Being a cable driven robot. (<a href="https://twitter.com/tobbelobb/status/1497141161961664529">1</a>)</li>
        </ul>
      </ul>
    </p>
    <p>
      That was 12 selling points for HP4.
      Nine of them are new since HP3.
      So HP4 is a cosmic upgrade.
    </p>
    <h3>🚀 HP5's Planned Upgrades 🚀</h3>
    <p>
      <ul>
        <li>More Compact While Printing, enabled by</li>
        <ul>
          <li>A Fifth Motion Axis, similar to the four we already have. Adding one more low anchor would allow better working angles, and hence less wasted space.</li>
          <li>A Narrower, Taller Effector</li>
        </ul>
        <li>Lower Price, enabled by</li>
        <ul>
          <li>New circuit boards that are not yet available.</li>
        </ul>
        <li>Support for House-Size Printing, enabled by</li>
        <ul>
          <li>New motor controller and driver boards that are not yet available. They can handle the larger currents that are needed.</li>
          <li>Scaled up parts in general.</li>
        </ul>
        <li>Simpler Setup, enabled by</li>
        <ul>
          <li>New motor controller and driver boards that are not yet available. Will remove need for step/dir wires and external encoders, and give better force data.</li>
          <li>The computer vision system finding initial marker positions automatically.</li>
          <li>Pre-calibrated low distortion cameras. Manual camera calibration is too much hassle.</li>
          <li>A Ready-to-buy Bed Surface, Possibly a Thin Film With LEDs or Retro-reflective circles built in</li>
        </ul>
        <li>Better Computer Vision, enabled by</li>
        <ul>
          <li>Using multiple cameras. Their data can be combined to more than halve the error by weighting, so each camera mostly measure position parallel to its own image plane, not along the depth-direction.</li>
          <li>Active LEDs used as markers</li>
          <li>Faster maker detection &amp; identification through not searching whole image, using threads, ID via Aruco tags, etc.</li>
        </ul>
        <li>Automatic Homing, enabled by</li>
        <ul>
          <li>Computer Vision, Force Sensing, Mechanical Probing, and Torque Mode used together.</li>
        </ul>
        <li>Press Power-Press Print Experience, enabled by</li>
        <ul>
          <li>Automatic Homing</li>
          <li>Tighter Integration of Computer Vision</li>
        </ul>

        <li>Perfect Quality Control, enabled by</li>
        <ul>
          <li>Dynamic measurement and compensation for position and line tightness errors during print.</li>
        </ul>
        <li>Absolute Encoders. They can start up completely still and give stiffer motor axles, without adding cost (due to better circuit boards that are not yet available).</li>
      </ul>
    </p>
    <p>
      So the HP5 will be a big upgrade, although smaller than the HP4 was.
      Hopefully, HP5 will be designed and tested faster than HP4 was (which took four years).
    </p>
    <p>
      The HP4 has impressed me and shown very much promise so far.
      Compared to HP3 it's a dream to use.
      It has encouraged me to continue along this design path.
    </p>
    <p>
      I think it's successor, the Hangprinter v5, could become a real winner, a design that's very hard to optimize further,
      and a good candidate for mass manufacturing.
      I've written about local design optimums before.
      I think HP5 could be one.
    </p>
  </post>
  <post id="hangprinter_project_77" heading="Projects as Subtractive Processes" date="25-1-2022">
    <p>
      Technical projects are often thought of as additive processes.
      Engineers will often say that they're makers or builders of new products or technologies,
      adding value to something, or that they're designing a new solution.
    </p>
    <p>
      Those are all useful ways to describe technology development,
      but it can also be good to describe projects with subtractive terms,
      as in "we're removing obstacles".
      I think I need some of that.
    </p>
    <figure>
      <a href="./bilder/wall_p1_shiny_1.JPG">
        <img src="./bilder/wall_p1_shiny_1_small.JPG" alt="" width="500" height="298"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      Let's make a little model of (or remove confusion about) projects in general, to explain the image above.
    </p>
    <p>
      Imagine that every technical project is carving out a hole in a wall that separates a user or consumer from something desirable. <br />
    </p>
    <figure>
      <a href="./bilder/wall_p1_shiny_2.JPG">
        <img src="./bilder/wall_p1_shiny_2_small.JPG" alt="" width="500" height="322"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      Obstacles can be categorized and layered. Different projects have different kinds and amounts of layers.
    </p>
    <figure>
      <a href="./bilder/wall_p2_shiny_1.JPG">
        <img src="./bilder/wall_p2_shiny_1_small.JPG" alt="" width="500" height="243"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      Let's look at the lowest layer. Before one starts a project, it's important to learn if the desired outcome conflicts with the laws of physics. Don't start a project where laws of physics stand between your user and success.
    </p>
    <p>
      So product creation is a subtractive process, removing obstacles between the user and some desirable outcome.
    </p>
    <p>
      To maximize the field of view for the consumer through the hole, we should shape it like this, ideally:
    </p>
    <figure>
      <a href="./bilder/wall_p3_shiny_1.JPG">
        <img src="./bilder/wall_p3_shiny_1_small.JPG" alt="" width="500" height="323"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      The field of view metaphor says that the more unknown or fundamental problems should be removed more thoroughly, or require more work per user happiness.
    </p>
    <p>
      But product creation is a process. We need to plan some steps between start and finish.
    </p>
    <p>
      The process is often designed to secure sustainable funding throughout the development process, like this:
    </p>
    <figure>
      <a href="./bilder/wall_p4_shiny_1.JPG">
        <img src="./bilder/wall_p4_shiny_1_small.JPG" alt="" width="500" height="519"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      A well known but ambitious project, like quantum computing or a space mission, will look like a pit dug down from above,
      at least for the first few years.
      This shape makes people expect breakthroughs.
    </p>
    <p>
      An in-house product development or research project, will look more like a cone shape drilling up from below.
      The shape of invisible ground work.
      This shape makes people confused and surprised.
    </p>
    <p>
      The ideal final shape of a hole can also be discussed.
      A heavily marketed product looks good from afar, like this:
    </p>
    <figure>
      <a href="./bilder/wall_p5_shiny_1.JPG">
        <img src="./bilder/wall_p5_shiny_1_small.JPG" alt="" width="500" height="514"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      A more niched or indy-style product is invisible from afar, but looks good if you come up close, like this:
    </p>
    <figure>
      <a href="./bilder/wall_p5_shiny_2.JPG">
        <img src="./bilder/wall_p5_shiny_2_small.JPG" alt="" width="500" height="508"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      I think Hangprinter has become a product with goodness that is almost completely unapproachable, like this:
    </p>
    <figure>
      <a href="./bilder/wall_p6_shiny_1.JPG">
        <img src="./bilder/wall_p6_shiny_1_small.JPG" alt="" width="500" height="201"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      ... Or even this:
    </p>
    <figure>
      <a href="./bilder/wall_p6_shiny_2.JPG">
        <img src="./bilder/wall_p6_shiny_2_small.JPG" alt="" width="500" height="316"/>
      </a>
      <figcaption>
      </figcaption>
    </figure>
    <p>
      Or actually, most of the people that I want to reach haven't even heard about Hangprinter.
      Like the shape in the first image of this post, with no opening at the top.
    </p>
    <p>
      Among the hard-to-see and hard-to-use stars in the Hangprinter Project are the
      <a href="https://gitlab.com/hangprinter/line-collision-detector">line-collision-detector</a>,
      <a href="https://gitlab.com/tobben/hp-mark">hp-mark</a>, and
      <a href="https://gitlab.com/tobben/auto-calibration-simulation-for-hangprinter">auto-calibration-simulation-for-hangprinter</a>.
    </p>
    <p>
      I'm eager to add other low level features like line force measurements and various kinds of online adaptive algorithms to
      improve accuracy, precision, speed etc.
      Really eager.
    </p>
    <p>
      The subtractive way to look at Hangprinter makes it easier for me to wait, and instead focus more
      on getting the existing features to fit together.
      Sticking to what I wrote in the previous <a href="https://hangprinter.org/newsletter/#post_33">Hangprinter newsletter</a>.
    </p>
    <p>
      Anyways, I hope this home-made toy-model of a project can be useful or entertaining to you.
      Try it when you need to communicate project status or during project planning.
      Bye!
    </p>
  </post>
</posts>
